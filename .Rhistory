library(kernlab)
install.packages("kernlab")
library(kernlab)
data(spam)
head(spam)
dim(spam)
install.packages("knitr")
library(knitr)
install.packages(c("BH", "curl", "DBI", "devtools", "evaluate", "fields", "formatR", "highr", "Hmisc", "lubridate", "Matrix", "nlme", "openssl", "Rcpp", "RMySQL", "survival", "swirl", "testthat", "zoo"))
install.packages(c("BH", "curl", "DBI", "devtools", "evaluate",
)
)
install.packages(c("BH", "curl", "DBI", "devtools", "evaluate")
)
install.packages(c("fields", "formatR", "highr", "Hmisc", "lubridate", "Matrix", "nlme", "openssl", "Rcpp", "RMySQL", "survival", "swirl", "testthat", "zoo"))
install.packages(c("fields", "formatR", "highr", "Hmisc", "lubridate",
))
install.packages(c("fields", "formatR", "highr", "Hmisc", "lubridate")
)
install.packages(c("Matrix", "nlme", "openssl", "Rcpp", "RMySQL", "survival", "swirl", "testthat", "zoo"))
install.packages(c("Matrix", "nlme", "openssl", "Rcpp", "RMySQL",
))
install.packages(c("Matrix", "nlme", "openssl", "Rcpp", "RMySQL"))
install.packages(c("Matrix", "nlme", "openssl", "Rcpp", "RMySQL"))
install.packages(c("Matrix", "nlme", "openssl", "Rcpp", "RMySQL"))
install.packages(c("Matrix", "nlme", "openssl", "Rcpp", "RMySQL"))
install.packages(c("Matrix", "nlme", "openssl", "Rcpp", "RMySQL"))
install.packages(c("Matrix", "nlme", "openssl", "Rcpp", "RMySQL"))
install.packages(c("Matrix", "nlme", "openssl", "Rcpp", "RMySQL"))
install.packages(c("survival", "swirl", "testthat", "zoo"))
install.packages(c("survival", "swirl", "testthat", "zoo"))
install.packages(c("survival", "swirl", "testthat", "zoo"))
?hist
library(knitr)
setwd("~/_Personal/Data Scientist Toolbox/Reproducible Research/Project1/RepData_PeerAssessment1")
unzip('activity.zip')
activity <- read.csv("activity.csv")
activity_sum_day <- as.data.frame.table(with(activity, tapply(steps, date, sum, na.rm=TRUE)))
names(activity_sum_day) <- c("date", "steps")
activity_mean <- mean(activity_sum_day$steps)
activity_summary <- summary(activity_sum_day$steps)[c(3,4)]
activity_sum_day$date <- as.POSIXct(as.character(activity_sum_day$date))
periods <- nrow(activity_sum_day)
periods
range(activity_sum_day$date)
hist(activity_sum_day$steps, breaks = periods, xlim = range(activity_sum_day$date))
hist(activity_sum_day$steps, breaks = periods, xlim = periods)
hist(activity_sum_day$steps, breaks = periods)
head(activity_sum_day)
?barplot
barplot(activity_sum_day$steps)
?barplot
barplot(activity_sum_day$steps)
?barplot
range(activity_sum_day$date)
barplot(activity_sum_day$steps, xlim = range(activity_sum_day$date))
barplot(activity_sum_day$steps, xlim = range(activity_sum_day$date))
barplot(activity_sum_day$steps, xlim = activity_sum_day$date
)
barplot(activity_sum_day$steps)
?barplot
barplot(activity_sum_day$steps, axis.lty = 1)
barplot(activity_sum_day$steps, axis.Date())
barplot(activity_sum_day$steps, axis.Date(activity_sum_day$date))
?barplot
?barplot
barplot(activity_sum_day$steps)
tail(activity_sum_day)
class(activity$interval)''
class(activity$interval)
unzip('activity.zip')
activity <- read.csv("activity.csv")
activity_average_interval <- as.data.frame.table(with(activity, tapply(steps, as.factor(interval), sum, na.rm=TRUE)))
names(activity_average_interval) <- c("interval", "steps")
head(activity_average_interval)
with(activity_average_interval, plot(interval, steps, type = "l", xlab = "Interval", ylab = "Number of Steps", main = "Average Number of Steps in an Interval"))
summary(activity_average_interval)
which.max( activity_average_interval[,2] )
activity_average_interval[which.max( activity_average_interval[,2],1 )]
activity_average_interval(which.max( activity_average_interval[,2],1 )
)
max_interval <- which.max( activity_average_interval[,2] )
activity_average_interval[max_interval, 1]
unzip('activity.zip')
activity <- read.csv("activity.csv")
activity_average_interval <- as.data.frame.table(with(activity, tapply(steps, as.factor(interval), sum, na.rm=TRUE)))
names(activity_average_interval) <- c("interval", "steps")
with(activity_average_interval, plot(interval, steps, type = "l", xlab = "Interval", ylab = "Number of Steps", main = "Average Number of Steps in an Interval"))
max_interval <- which.max( activity_average_interval[,2] )
maximum_step_time <- activity_average_interval[max_interval, 1]
maximum_step_time
class(maximum_step_time)
as.integer(maximum_step_time)
as.integer(as.character(maximum_step_time))
maximum_step_time <- as.integer(as.character(activity_average_interval[max_interval, 1]))
unzip('activity.zip')
activity <- read.csv("activity.csv")
activity_average_interval <- as.data.frame.table(with(activity, tapply(steps, as.factor(interval), sum, na.rm=TRUE)))
names(activity_average_interval) <- c("interval", "steps")
with(activity_average_interval, plot(interval, steps, type = "l", xlab = "Interval", ylab = "Number of Steps", main = "Average Number of Steps in an Interval"))
max_interval <- which.max( activity_average_interval[,2] )
maximum_step_time <- as.integer(as.character(activity_average_interval[max_interval, 1]))
maximum_step_time
with(activity_sum_day, plot(date, steps, type = "h", xlab = "Date", ylab = "Number of Steps", main = "Total Number of Steps Per Day"))
?plot
with(activity_sum_day, plot(date, steps, type = "h", xlab = "Date", ylab = "Number of Steps", main = "Total Number of Steps Per Day"))
with(activity_sum_day, plot(date, steps, type = "h", xlab = "Date", ylab = "Number of Steps", main = "Total Number of Steps Per Day"))
?impute
install.packages("imputeMissings")
library(imputeMissings)
?imputemissings
??imputeMissings
?randomforest
??randoemforest
??randomforest
activity_missing <- impute(activity, method = "randomforest")
?impute
activity_miss <- compute(activity,method="randomForest")
activity_miss <- compute(activity,method="median/mode")
impute(activity_miss)
impute(activity_miss, method="median/mode")
impute(activity, method="median/mode")
activity_missing <- impute(activity, method="median/mode")
head(activity_missing)
write.csv(activity_missing, file = "activity_missing.csv")
install.packages("mice")
library(mice)
imputed_data <- mice(activity, m=5, maxit = 50, method = 'pmm', seed = 500)
imputed_data <- mice(activity, m=1, maxit = 2, method = 'pmm', seed = 500)
head(imputed_data)
completeData <- complete(imputed_Data,2)
completeData <- complete(imputed_data,2)
head(imputed_data)
class(imputed_data)
summary(imputed_data)
fit <- with(data = activity, exp = lm(steps ~ date))
combine <- pool(fit)
?pool
fit <- with(data = imputed_data, exp = lm(steps ~ date))
combine <- pool(fit)
combine
head(fit)
head(combine)
class(combine)
activity$steps(is.na)
is.na(activity$steps)
sum(is.na(activity$steps))
dim(activity)
activity_mode <- as.data.frame.table(with(activity, tapply(steps, as.factor(interval), mode, na.rm=TRUE)))
activity_mode <- as.data.frame.table(with(activity, tapply(steps, as.factor(interval), mode, na.rm=TRUE)))
activity_mode <- as.data.frame.table(with(activity, tapply(steps, as.factor(interval), mode)))
activity_mode
?model.extract
?mode
?median
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
activity_mode <- as.data.frame.table(with(activity, tapply(steps, as.factor(interval), getmode)))
activity_mode
activity_mode <- as.data.frame.table(with(activity, tapply(steps, as.factor(interval), sum(unique))))
activity_mode <- as.data.frame.table(with(activity, tapply(steps, as.factor(interval),unique))
)
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
getmode(activity$steps)
getmode(activity$steps, na.rm=TRUE)
activity_median <- as.data.frame.table(with(activity, tapply(steps, as.factor(interval), median, na.rm=TRUE)))
activity_median
activity_median <- as.data.frame.table(with(activity, tapply(steps, as.factor(interval), mean, na.rm=TRUE)))
activity_median
activity_interval_mean <- as.data.frame.table(with(activity, tapply(steps, as.factor(interval), mean, na.rm=TRUE)))
names(activity_interval_mean) <- c("interva", "steps")
head(activity_interval_mean)
names(activity_interval_mean) <- c("interval", "steps")
length(activity$steps)
db_length <- length(activity$steps)
install.packages("Hmisc")
library(Hmisc)
activity$new_steps <- with(activity, impute(steps, mean))
activity$new_steps <- with(activity, impute(steps, mean))
activity$new_steps <- with(activity, impute(steps, mean))
?which
which(activity$steps == na)
which(activity$steps == "na")
which(is.na(activity$steps))
na_rows <- which(is.na(activity$steps))
length(na_rows)
na_rows[1]
na_rows[100]
na_rows[2304
]
activity$new_steps <- activity$steps
length(activity_interval_mean$interval)
for i in 1:2304{ for j in 1:288{if activity[i,3]==activity_interval_mean[j,1]{activity[i,2] <- activity_interval_mean[j,2]}}}
for (i in 1:2304){ for j (in 1:288){if (activity[i,3]==activity_interval_mean[j,1]){activity[i,2] <- activity_interval_mean[j,2]}}}
for (i in 1:2304){ for (j in 1:288){if (activity[i,3]==activity_interval_mean[j,1]){activity[i,2] <- activity_interval_mean[j,2]}}}
warnings()
for (i in 1:2304){ for (j in 1:288){if (activity[i,3]==activity_interval_mean[j,1]){activity[i,2] <- activity_interval_mean[j,2]}}}
head(activity)
head(activity_interval_mean)
head(activity)
unzip('activity.zip')
activity <- read.csv("activity.csv")
activity_sum_day <- as.data.frame.table(with(activity, tapply(steps, date, sum, na.rm=TRUE)))
names(activity_sum_day) <- c("date", "steps")
activity_mean <- mean(activity_sum_day$steps)
activity_summary <- summary(activity_sum_day$steps)[c(3,4)]
with(activity_sum_day, plot(date, steps, type = "h", xlab = "Date", ylab = "Number of Steps", main = "Total Number of Steps Per Day"))
unzip('activity.zip')
activity <- read.csv("activity.csv")
activity_sum_day <- as.data.frame.table(with(activity, tapply(steps, date, sum, na.rm=TRUE)))
names(activity_sum_day) <- c("date", "steps")
activity_mean <- mean(activity_sum_day$steps)
activity_summary <- summary(activity_sum_day$steps)[c(3,4)]
with(activity_sum_day, plot(date, steps, type = "h", xlab = "Date", ylab = "Number of Steps", main = "Total Number of Steps Per Day"))
with(activity_sum_day, plot(date, steps, type = "h", xlab = "Date", ylab = "Number of Steps", main = "Total Number of Steps Per Day"))
activity_average_interval <- as.data.frame.table(with(activity, tapply(steps, as.factor(interval), sum, na.rm=TRUE)))
names(activity_average_interval) <- c("interval", "steps")
with(activity_average_interval, plot(interval, steps, type = "l", xlab = "Interval", ylab = "Number of Steps", main = "Average Number of Steps in an Interval"))
max_interval <- which.max( activity_average_interval[,2] )
maximum_step_time <- as.integer(as.character(activity_average_interval[max_interval, 1]))
head(activity)
activity[1,2]
activity[1,1]
for (i in 1:2304){ for (j in 1:288){if (activity[i,3]==activity_interval_mean[j,1]){activity[i,1] <- activity_interval_mean[j,2]}else{next}}}
head(activity)
unzip('activity.zip')
activity <- read.csv("activity.csv")
activity_sum_day <- as.data.frame.table(with(activity, tapply(steps, date, sum, na.rm=TRUE)))
names(activity_sum_day) <- c("date", "steps")
activity_mean <- mean(activity_sum_day$steps)
activity_summary <- summary(activity_sum_day$steps)[c(3,4)]
with(activity_sum_day, plot(date, steps, type = "h", xlab = "Date", ylab = "Number of Steps", main = "Total Number of Steps Per Day"))
activity_average_interval <- as.data.frame.table(with(activity, tapply(steps, as.factor(interval), sum, na.rm=TRUE)))
names(activity_average_interval) <- c("interval", "steps")
with(activity_average_interval, plot(interval, steps, type = "l", xlab = "Interval", ylab = "Number of Steps", main = "Average Number of Steps in an Interval"))
max_interval <- which.max( activity_average_interval[,2] )
maximum_step_time <- as.integer(as.character(activity_average_interval[max_interval, 1]))
activityna <- sum(is.na(activity$steps))
activity_interval_mean <- as.data.frame.table(with(activity, tapply(steps, as.factor(interval), mean, na.rm=TRUE)))
names(activity_interval_mean) <- c("interval", "steps")
for (i in 1:activityna){ for (j in 1:288){if (activity[i,3]==activity_interval_mean[j,1]){activity[i,1] <- activity_interval_mean[j,2]}else{next}}}
unzip('activity.zip')
activity <- read.csv("activity.csv")
activity_sum_day <- as.data.frame.table(with(activity, tapply(steps, date, sum, na.rm=TRUE)))
names(activity_sum_day) <- c("date", "steps")
activity_mean <- mean(activity_sum_day$steps)
activity_summary <- summary(activity_sum_day$steps)[c(3,4)]
with(activity_sum_day, plot(date, steps, type = "h", xlab = "Date", ylab = "Number of Steps", main = "Total Number of Steps Per Day"))
activity_average_interval <- as.data.frame.table(with(activity, tapply(steps, as.factor(interval), sum, na.rm=TRUE)))
names(activity_average_interval) <- c("interval", "steps")
with(activity_average_interval, plot(interval, steps, type = "l", xlab = "Interval", ylab = "Number of Steps", main = "Average Number of Steps in an Interval"))
max_interval <- which.max( activity_average_interval[,2] )
maximum_step_time <- as.integer(as.character(activity_average_interval[max_interval, 1]))
activity_new <- activity
activityna <- sum(is.na(activity$steps))
activity_interval_mean <- as.data.frame.table(with(activity, tapply(steps, as.factor(interval), mean, na.rm=TRUE)))
names(activity_interval_mean) <- c("interval", "steps")
ilength <- length(activity_interval_mean$interval)
for (i in 1:activityna){ for (j in 1:ilength){if (activity[i,3]==activity_interval_mean[j,1]){activity_new[i,1] <- activity_interval_mean[j,2]}else{next}}}
head(activity_new)
class(activity_new$date)
with(activity_average_interval, plot(interval, steps, type = "l", xlab = "Interval", ylab = "Number of Steps", main = "Average Number of Steps in an Interval"))
ith(activity_sum_day, plot(date, steps, type = "h", xlab = "Date", ylab = "Number of Steps", main = "Total Number of Steps Per Day"))
with(activity_sum_day, plot(date, steps, type = "h", xlab = "Date", ylab = "Number of Steps", main = "Total Number of Steps Per Day"))
with(activity_sum_day, plot(date, steps, type = "l", xlab = "Date", ylab = "Number of Steps", main = "Total Number of Steps Per Day"))
with(activity_sum_day, plot(date, steps, type = "o", xlab = "Date", ylab = "Number of Steps", main = "Total Number of Steps Per Day"))
with(activity_sum_day, plot(date, steps, type = "o", xlab = "Date", ylab = "Number of Steps", main = "Total Number of Steps Per Day"))
rm(list=ls())
with(activity_sum_day, plot(date, steps, type = "o", xlab = "Date", ylab = "Number of Steps", main = "Total Number of Steps Per Day"))
setwd("~/_Personal/Data Scientist Toolbox/Reproducible Research/Project1/RepData_PeerAssessment1")
unzip('activity.zip')
activity <- read.csv("activity.csv")
activity_sum_day <- as.data.frame.table(with(activity, tapply(steps, date, sum, na.rm=TRUE)))
names(activity_sum_day) <- c("date", "steps")
activity_mean <- mean(activity_sum_day$steps)
activity_summary <- summary(activity_sum_day$steps)[c(3,4)]
with(activity_sum_day, plot(date, steps, type = "h", xlab = "Date", ylab = "Number of Steps", main = "Total Number of Steps Per Day"))
with(activity_sum_day, plot(date, steps, type = "o", xlab = "Date", ylab = "Number of Steps", main = "Total Number of Steps Per Day"))
unzip('activity.zip')
activity <- read.csv("activity.csv")
activity_sum_day <- as.data.frame.table(with(activity, tapply(steps, date, sum, na.rm=TRUE)))
names(activity_sum_day) <- c("date", "steps")
activity_mean <- mean(activity_sum_day$steps)
activity_summary <- summary(activity_sum_day$steps)[c(3,4)]
with(activity_sum_day, plot(date, steps, type = "o", xlab = "Date", ylab = "Number of Steps", main = "Total Number of Steps Per Day"))
hist(activity$steps)
hist(activity_sum_day)
hist(activity_sum_day$steps)
unzip('activity.zip')
activity <- read.csv("activity.csv")
activity_sum_day <- as.data.frame.table(with(activity, tapply(steps, date, sum, na.rm=TRUE)))
names(activity_sum_day) <- c("date", "steps")
activity_mean <- mean(activity_sum_day$steps)
activity_summary <- summary(activity_sum_day$steps)[c(3,4)]
with(activity_sum_day, plot(date, steps, type = "o", xlab = "Date", ylab = "Number of Steps", main = "Total Number of Steps Per Day"))
unzip('activity.zip')
activity <- read.csv("activity.csv")
activity_sum_day <- as.data.frame.table(with(activity, tapply(steps, date, sum, na.rm=TRUE)))
names(activity_sum_day) <- c("date", "steps")
activity_mean <- mean(activity_sum_day$steps)
activity_summary <- summary(activity_sum_day$steps)[c(3,4)]
with(activity_sum_day, plot(date, steps, type = "h", xlab = "Date", ylab = "Number of Steps", main = "Total Number of Steps Per Day"))
hist(activity_sum_day$steps)
unzip('activity.zip')
activity <- read.csv("activity.csv")
activity_sum_day <- as.data.frame.table(with(activity, tapply(steps, date, sum, na.rm=TRUE)))
names(activity_sum_day) <- c("date", "steps")
activity_mean <- mean(activity_sum_day$steps)
activity_summary <- summary(activity_sum_day$steps)[c(3,4)]
with(activity_sum_day, plot(date, steps, type = "h", xlab = "Date", ylab = "Number of Steps", main = "Total Number of Steps Per Day"))
class(activity_sum_day$date)
activity_sum_day$date <- as.date(as.character(activity_sum_day$date))
activity_sum_day$date <- as.Date(as.character(activity_sum_day$date))
with(activity_sum_day, plot(date, steps, type = "h", xlab = "Date", ylab = "Number of Steps", main = "Total Number of Steps Per Day"))
activity_neew
activity_new
activity_average_interval <- as.data.frame.table(with(activity, tapply(steps, as.factor(interval), sum, na.rm=TRUE)))
names(activity_average_interval) <- c("interval", "steps")
with(activity_average_interval, plot(interval, steps, type = "l", xlab = "Interval", ylab = "Number of Steps", main = "Average Number of Steps in an Interval"))
max_interval <- which.max( activity_average_interval[,2] )
maximum_step_time <- as.integer(as.character(activity_average_interval[max_interval, 1]))
activity_new <- activity
activityna <- sum(is.na(activity$steps))
activity_interval_mean <- as.data.frame.table(with(activity, tapply(steps, as.factor(interval), mean, na.rm=TRUE)))
names(activity_interval_mean) <- c("interval", "steps")
ilength <- length(activity_interval_mean$interval)
for (i in 1:activityna){ for (j in 1:ilength){if (activity[i,3]==activity_interval_mean[j,1]){activity_new[i,1] <- activity_interval_mean[j,2]}else{next}}}
head(activity_new)
activity_new <- activity
activityna <- sum(is.na(activity$steps))
activity_interval_mean <- as.data.frame.table(with(activity, tapply(steps, as.factor(interval), mean, na.rm=TRUE)))
names(activity_interval_mean) <- c("interval", "steps")
ilength <- length(activity_interval_mean$interval)
for (i in 1:activityna){ for (j in 1:ilength){if (activity[i,3]==activity_interval_mean[j,1]){activity_new[i,1] <- activity_interval_mean[j,2]}else{next}}}
activity_new_sum_day <- as.data.frame.table(with(activity_new, tapply(steps, date, sum)))
names(activity_new_sum_day) <- c("date", "steps")
activity_new_mean <- mean(activity_new_sum_day$steps)
activity_new_sum_day$date <- as.Date(as.character(activity_new_sum_day$date))
activity_new_summary <- summary(activity_new_sum_day$steps)[c(3,4)]
with(activity_new_sum_day, plot(date, steps, type = "h", xlab = "Date", ylab = "Number of Steps", main = "Total Number of Steps Per Day after Impute NA"))
with(activity_sum_day, plot(date, steps, type = "h", xlab = "Date", ylab = "Number of Steps", main = "Total Number of Steps Per Day"))
weeksdays(activity_new$date)
weekdays(activity_new$date)
class(activity_new$date)
weekdays(as.Date(as.character(activity_new$date)))
activity_new$wk_day <- weekdays(as.Date(as.character(activity_new$date)))
tail(activity_new$wk_day)
activity_new$wk_day <- wday(as.Date(as.character(activity_new$date)))
activity_new$wk_day <- as.POSIXlt(as.character(activity_new$date))$wday
head(activity_new)
tail(activity_new)
activity_new <- activity
activityna <- sum(is.na(activity$steps))
activity_interval_mean <- as.data.frame.table(with(activity, tapply(steps, as.factor(interval), mean, na.rm=TRUE)))
names(activity_interval_mean) <- c("interval", "steps")
ilength <- length(activity_interval_mean$interval)
for (i in 1:activityna){ for (j in 1:ilength){if (activity[i,3]==activity_interval_mean[j,1]){activity_new[i,1] <- activity_interval_mean[j,2]}else{next}}}
activity_new_sum_day <- as.data.frame.table(with(activity_new, tapply(steps, date, sum)))
names(activity_new_sum_day) <- c("date", "steps")
activity_new_mean <- mean(activity_new_sum_day$steps)
activity_new_sum_day$date <- as.Date(as.character(activity_new_sum_day$date))
activity_new_summary <- summary(activity_new_sum_day$steps)[c(3,4)]
with(activity_new_sum_day, plot(date, steps, type = "h", xlab = "Date", ylab = "Number of Steps", main = "Total Number of Steps Per Day after Impute NA"))
tail(activity_new)
head(activity_new)
class(activity_new$interval)
which(activity$steps==na)
which(is.na(activity$steps))
na_id <- which(is.na(activity$steps))
na_id[2304]
activity_new <- activity
activityna <- sum(is.na(activity$steps))
na_id <- which(is.na(activity$steps))
activity_interval_mean <- as.data.frame.table(with(activity, tapply(steps, as.factor(interval), mean, na.rm=TRUE)))
names(activity_interval_mean) <- c("interval", "steps")
ilength <- length(activity_interval_mean$interval)
for (i in 1:activityna){ for (j in 1:ilength){k = na_id[i] if (activity[k,3]==activity_interval_mean[j,1]){activity_new[k,1] <- activity_interval_mean[j,2]}else{next}}}
activity_new_sum_day <- as.data.frame.table(with(activity_new, tapply(steps, date, sum)))
names(activity_new_sum_day) <- c("date", "steps")
activity_new_mean <- mean(activity_new_sum_day$steps)
activity_new_sum_day$date <- as.Date(as.character(activity_new_sum_day$date))
activity_new_summary <- summary(activity_new_sum_day$steps)[c(3,4)]
with(activity_new_sum_day, plot(date, steps, type = "h", xlab = "Date", ylab = "Number of Steps", main = "Total Number of Steps Per Day after Impute NA"))
activity_new <- activity
activityna <- sum(is.na(activity$steps))
na_id <- which(is.na(activity$steps))
activity_interval_mean <- as.data.frame.table(with(activity, tapply(steps, as.factor(interval), mean, na.rm=TRUE)))
names(activity_interval_mean) <- c("interval", "steps")
ilength <- length(activity_interval_mean$interval)
for (i in 1:activityna){ for (j in 1:ilength){if (activity[na_id[i],3]==activity_interval_mean[j,1]){activity_new[na_id[i],1] <- activity_interval_mean[j,2]}else{next}}}
activity_new_sum_day <- as.data.frame.table(with(activity_new, tapply(steps, date, sum)))
names(activity_new_sum_day) <- c("date", "steps")
activity_new_mean <- mean(activity_new_sum_day$steps)
activity_new_sum_day$date <- as.Date(as.character(activity_new_sum_day$date))
activity_new_summary <- summary(activity_new_sum_day$steps)[c(3,4)]
with(activity_new_sum_day, plot(date, steps, type = "h", xlab = "Date", ylab = "Number of Steps", main = "Total Number of Steps Per Day after Impute NA"))
tail(activity_new)
?plot
activity_new$wk_day <- as.POSIXlt(as.character(activity_new$date))$wday
p <- ggplot(data=activity_new, aes(x = interval, y = steps))
library(ggplot2)
p <- ggplot(data=activity_new, aes(x = interval, y = steps))
install.packages("ggplot2")
library(ggplot2)
p <- ggplot(data=activity_new, aes(x = interval, y = steps))
q <- p+ geom_line(size = 1)
r <- q+ facet_grid(.~ wk_day<6)
s <- r+ labs(title = "Weekday vs. Weekend")
print(s)
mfrow(c(2,1))
par(mfrow=(c(2,1)))
p <- ggplot(data=activity_new, aes(x = interval, y = steps))
q <- p+ geom_line(size = 1)
r <- q+ facet_grid(.~ wk_day<6)
s <- r+ labs(title = "Weekday vs. Weekend")
print(s)
r <- q+ facet_grid(.~ wk_day)
s <- r+ labs(title = "Weekday vs. Weekend")
print(s)
activity_new_weekday <- with(activity_new, subset(wk_day>5 & wk_day<1))
?subset
activity_new_weekday <- subset(activity_new, wk_day>5 & wk_day<1)
activity_new_weekday <- subset(activity_new, wk_day>5 & wk_day<1, select = -wk_day)
activity_new_weekend <- subset(activity_new, wk_day<6 & wk_day>0, select = -wk_day)
activity_new_weekend$Wday <- "Weekend"
activity_new_weekday$Wday <- "Weekday"
activity_new_weekday
activity_new_weekend
activity_new_weekend
activity_new_weekday
activity_new_weekend <- subset(activity_new, wk_day>5 | wk_day<1, select = -wk_day)
activity_new_weekday <- subset(activity_new, wk_day<6 & wk_day>0, select = -wk_day)
activity_new_weekday
activity_new_weekday$Wday <- "Weekday"
activity_new_weekend$Wday <- "Weekend"
activity_new2 <- rbind(activity_new_weekday, activity_new_weekend)
activity_new2
head(activity_new2)
length(activity_new2$steps)
activity_new$wk_day <- as.POSIXlt(as.character(activity_new$date))$wday
activity_new_weekday <- subset(activity_new, wk_day>5 & wk_day<1, select = -wk_day)
activity_new_weekend <- subset(activity_new, wk_day>5 | wk_day<1, select = -wk_day)
activity_new_weekday$Wday <- "Weekday"
activity_new_weekend$Wday <- "Weekend"
activity_new2 <- rbind(activity_new_weekday, activity_new_weekend)
par(mfrow = c(2,1))
p <- ggplot(data=activity_new2, aes(x = interval, y = steps))
q <- p+ geom_line(size = 1)
r <- q+ facet_grid(Wday~.)
s <- r+ labs(title = "Weekday vs. Weekend")
print(s)
activity_new$wk_day <- as.POSIXlt(as.character(activity_new$date))$wday
activity_new_weekday <- subset(activity_new, wk_day<6 & wk_day>0, select = -wk_day)
activity_new_weekend <- subset(activity_new, wk_day>5 | wk_day<1, select = -wk_day)
activity_new_weekday$Wday <- "Weekday"
activity_new_weekend$Wday <- "Weekend"
activity_new2 <- rbind(activity_new_weekday, activity_new_weekend)
par(mfrow = c(2,1))
p <- ggplot(data=activity_new2, aes(x = interval, y = steps))
q <- p+ geom_line(size = 1)
r <- q+ facet_grid(Wday~.)
s <- r+ labs(title = "Weekday vs. Weekend")
print(s)
s <- r+ labs(title = "Weekday vs. Weekend")
activity_new$wk_day <- as.POSIXlt(as.character(activity_new$date))$wday
activity_new_weekday <- subset(activity_new, wk_day<6 & wk_day>0, select = -wk_day)
activity_new_weekend <- subset(activity_new, wk_day>5 | wk_day<1, select = -wk_day)
activity_new_weekday$Wday <- "Weekday"
activity_new_weekend$Wday <- "Weekend"
activity_new2 <- rbind(activity_new_weekday, activity_new_weekend)
par(mfrow = c(2,1))
p <- ggplot(data=activity_new2, aes(x = interval, y = steps))
q <- p+ geom_line(size = 1)
r <- q+ facet_grid(Wday~.)
s <- r+ labs(title = "Weekday vs. Weekend")
print(s)
print(s)
activity_new$wk_day <- as.POSIXlt(as.character(activity_new$date))$wday
activity_new_weekday <- subset(activity_new, wk_day<6 & wk_day>0, select = -wk_day)
activity_new_weekend <- subset(activity_new, wk_day>5 | wk_day<1, select = -wk_day)
activity_new_weekday$Wday <- "Weekday"
activity_new_weekend$Wday <- "Weekend"
activity_new2 <- rbind(activity_new_weekday, activity_new_weekend)
par(mfrow = c(2,1))
p <- ggplot(data=activity_new2, aes(x = interval, y = steps))
q <- p+ geom_line(size = 1)
r <- q+ facet_grid(Wday~.)
t <- r+ labs(title = "Weekday vs. Weekend")
print(t)
print(t)
activity_new$wk_day <- as.POSIXlt(as.character(activity_new$date))$wday
activity_new_weekday <- subset(activity_new, wk_day>0 & wk_day<6, select = -wk_day)
activity_new_weekend <- subset(activity_new, wk_day<1 | wk_day>5, select = -wk_day)
activity_new_weekday$Wday <- "Weekday"
activity_new_weekend$Wday <- "Weekend"
activity_new2 <- rbind(activity_new_weekday, activity_new_weekend)
par(mfrow = c(2,1))
p <- ggplot(data=activity_new2, aes(x = interval, y = steps))
q <- p+ geom_line(size = 1)
r <- q+ facet_grid(Wday~.)
t <- r+ labs(title = "Weekday vs. Weekend")
print(t)
print(t)
?file.exists
if (file.exists(activity.csv)){print("file")}
if (file.exists("activity.csv")){print("file")}
if (file.exists("activity.csv")){file.remove("activity.csv")}
